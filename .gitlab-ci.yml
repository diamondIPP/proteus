stages:
  - build
  - test

variables:
  GIT_SUBMODULE_STRATEGY: recursive

# default build environment w/ minimal version requirements
before_script:
  - source ci/lcg_setup.sh

check-format:
  # clang-format on ci yields different output from local installation
  allow_failure: true
  stage: build
  tags:
    - cvmfs
  script:
    - mkdir build
    - cd build
    - cmake ..
    - cmake --build . -- check-format

# plain debug build
build-debug:
  stage: build
  tags:
    - cvmfs
  script:
    - mkdir build
    - cd build
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../install ..
    - cmake --build . -- install
  artifacts:
    paths:
      - install

# debug builds w/ eudaq
.build-debug-eudaq: &template-build-debug-eudaq
  stage: build
  tags:
    - cvmfs
  script:
    - mkdir build build-eudaq
    - cd build-eudaq
    - cmake -GNinja -DCMAKE_INSTALL_PREFIX=../install ${EUDAQ_SOURCE}
    - cmake --build . # installs automatically
    - cd ../build
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../install -DPROTEUS_USE_EUDAQ=on ..
    - cmake --build . -- install
  artifacts:
    paths:
      - install
build-debug-eudaq1:
  <<: *template-build-debug-eudaq
  variables:
    EUDAQ_SOURCE: ../external/eudaq1
build-debug-eudaq2:
  <<: *template-build-debug-eudaq
  variables:
    EUDAQ_SOURCE: ../external/eudaq2

# plain release build
build-release:
  stage: build
  tags:
    - cvmfs
  script:
    - mkdir build
    - cd build
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../install ..
    - cmake --build . -- install
  artifacts:
    paths:
      - install

doc:
  allow_failure: true
  stage: build
  tags:
    - cvmfs
  script:
    - mkdir build && cd build
    - cmake -DPROTEUS_ENABLE_DOC=on ..
    - cmake --build . -- doc
  artifacts:
    paths:
      - build/doc/html

test-configs:
  stage: test
  tags:
    - cvmfs
  dependencies:
    - build-debug
  script:
    - source install/activate.sh
    - cd test
    - ./check_configs.sh

test-combine:
  stage: test
  tags:
    - cvmfs
  dependencies:
    - build-debug
  script:
    - source install/activate.sh
    - cd test
    - ./check_combine.sh --no-progress

# template for dataset tests

.test_dataset: &template_test_dataset
  stage: test
  tags:
    - cvmfs
  dependencies:
    - build-debug
  script:
    - source install/activate.sh
    - cd test
    - ./run_recon.sh ${DATASET} --no-progress
    - ./run_chain_all.sh ${DATASET} --no-progress
  artifacts:
    paths:
      - test/output
    expire_in: 1 week

test-unigetel_dummy-ebeam005_positron_nparticles01_inc:
  <<: *template_test_dataset
  variables:
    DATASET: unigetel_dummy/ebeam005_positron_nparticles01_inc

test-unigetel_dummy-ebeam005_positron_nparticles01_upr:
  <<: *template_test_dataset
  variables:
    DATASET: unigetel_dummy/ebeam005_positron_nparticles01_upr

test-unigetel_dummy-ebeam120_pionp_nparticles01_inc:
  <<: *template_test_dataset
  variables:
    DATASET: unigetel_dummy/ebeam120_pionp_nparticles01_inc

test-unigetel_dummy-ebeam120_pionp_nparticles01_upr:
  <<: *template_test_dataset
  variables:
    DATASET: unigetel_dummy/ebeam120_pionp_nparticles01_upr

test-unigetel_dummy-ebeam180_pionp_nparticles01_inc:
  <<: *template_test_dataset
  variables:
    DATASET: unigetel_dummy/ebeam180_pionp_nparticles01_inc

test-unigetel_dummy-ebeam180_pionp_nparticles01_inc_xygamma:
  <<: *template_test_dataset
  variables:
    DATASET: unigetel_dummy/ebeam180_pionp_nparticles01_inc_xygamma

test-unigetel_dummy-ebeam180_pionp_nparticles01_upr:
  <<: *template_test_dataset
  variables:
    DATASET: unigetel_dummy/ebeam180_pionp_nparticles01_upr
