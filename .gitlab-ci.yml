# build w/ default CentOS7 image
image: gitlab-registry.cern.ch/ci-tools/ci-worker:cc7

stages:
  - build
  - test

variables:
  GIT_SUBMODULE_STRATEGY: recursive

# default build environment w/ minimal version requirements
before_script:
  - yum install --assumeyes libgfortran
  - source ci/lcg_setup.sh

check-format:
  # clang-format on ci yields different output from local installation
  allow_failure: true
  stage: build
  tags:
    - cvmfs
  script:
    - mkdir build
    - cd build
    - cmake ..
    - cmake --build . -- check-format

# plain debug build
build-debug:
  stage: build
  tags:
    - cvmfs
  script:
    - mkdir build
    - cd build
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../install ..
    - cmake --build . -- install
  artifacts:
    paths:
      - install

# debug builds w/ eudaq v1
build-debug-eudaq1:
  stage: build
  tags:
    - cvmfs
  script:
    - ./ci/install_with_eudaq.sh eudaq1 install -DCMAKE_BUILD_TYPE=Debug
  artifacts:
    paths:
      - install

# debug builds w/ eudaq v2
build-debug-eudaq2:
  stage: build
  tags:
    - cvmfs
  script:
    - ./ci/install_with_eudaq.sh eudaq2 install -DCMAKE_BUILD_TYPE=Debug
  artifacts:
    paths:
      - install

# plain release build
build-release:
  stage: build
  tags:
    - cvmfs
  script:
    - mkdir build
    - cd build
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../install ..
    - cmake --build . -- install
  artifacts:
    paths:
      - install

doc:
  allow_failure: true
  stage: build
  tags:
    - cvmfs
  script:
    - mkdir build && cd build
    - cmake -DPROTEUS_ENABLE_DOC=on ..
    - cmake --build . -- doc
  artifacts:
    paths:
      - build/doc/html

test-configs:
  stage: test
  tags:
    - cvmfs
  dependencies:
    - build-debug
  script:
    - source install/activate.sh
    - cd test
    - ./check_configs.sh

test-combine:
  stage: test
  tags:
    - cvmfs
  dependencies:
    - build-debug
  script:
    - source install/activate.sh
    - cd test
    - ./check_combine.sh --no-progress

# run reconstruction using a debug build with an example dataset

test-unigetel_dummy-ebeam005_positron_nparticles01_inc-recon-debug:
  stage: test
  tags:
    - cvmfs
  dependencies:
    - build-debug
  variables:
    DATASET: unigetel_dummy/ebeam005_positron_nparticles01_inc
  script:
    - source install/activate.sh
    - cd test
    - ./run_recon.sh ${DATASET} --no-progress
  artifacts:
    paths:
      - test/output
    expire_in: 1 week

# template for full dataset reconstruction chain using the release build

.test_dataset: &template_test_dataset
  stage: test
  tags:
    - cvmfs
  dependencies:
    - build-release
  script:
    - source install/activate.sh
    - cd test
    - ./run_recon.sh ${DATASET} --no-progress
    - ./run_chain_all.sh ${DATASET} --no-progress
  artifacts:
    paths:
      - test/output
    expire_in: 1 week

test-unigetel_dummy-ebeam005_positron_nparticles01_inc:
  <<: *template_test_dataset
  variables:
    DATASET: unigetel_dummy/ebeam005_positron_nparticles01_inc

test-unigetel_dummy-ebeam005_positron_nparticles01_upr:
  <<: *template_test_dataset
  variables:
    DATASET: unigetel_dummy/ebeam005_positron_nparticles01_upr

test-unigetel_dummy-ebeam120_pionp_nparticles01_inc:
  <<: *template_test_dataset
  variables:
    DATASET: unigetel_dummy/ebeam120_pionp_nparticles01_inc

test-unigetel_dummy-ebeam120_pionp_nparticles01_upr:
  <<: *template_test_dataset
  variables:
    DATASET: unigetel_dummy/ebeam120_pionp_nparticles01_upr

test-unigetel_dummy-ebeam180_pionp_nparticles01_inc:
  <<: *template_test_dataset
  variables:
    DATASET: unigetel_dummy/ebeam180_pionp_nparticles01_inc

test-unigetel_dummy-ebeam180_pionp_nparticles01_inc_xygamma:
  <<: *template_test_dataset
  variables:
    DATASET: unigetel_dummy/ebeam180_pionp_nparticles01_inc_xygamma

test-unigetel_dummy-ebeam180_pionp_nparticles01_upr:
  <<: *template_test_dataset
  variables:
    DATASET: unigetel_dummy/ebeam180_pionp_nparticles01_upr
