[recon]
tracking_ids = [0,1,2,3]
num_points_min = 4
search_sigma_max = 1000.0
extrapolation_ids = [4]
track_fitter = "gbl3d"

[recon.straight3d]
tracking_ids = [0,1,2,3]
num_points_min = 4
search_sigma_max = 1000.0
extrapolation_ids = [4]
track_fitter = "straight3d"

# coarse alignment using cluster correlation
[align.tel_coarse]
# which method should be used to compute the alignment
method = "correlations" # correlations, residuals
# sensors that are used to compute the alignment, e.g. to build tracks
sensor_ids = [0,1,2,3]
# sensors which should be aligned (must be a subset of sensor_ids)
align_ids = [1,2,3]

[align.dut_coarse]
# which method should be used to compute the alignment
method = "correlations" # correlations, residuals
# sensors that are used to compute the alignment, e.g. to build tracks
sensor_ids = [0,1,2,3,4]
# sensors which should be aligned (must be a subset of sensor_ids)
align_ids = [4]

# fine alignment using track residuals
[align.tel_fine]
# which method should be used to compute the alignment
method = "localchi2" # correlations, residuals
# sensors that are used to compute the alignment, e.g. to build tracks
sensor_ids = [0,1,2,3]
# sensors which should be aligned (must be a subset of sensor_ids)
align_ids = [1,2,3]
# number of iterative alignment steps
num_steps = 60
# search window to find additional track clusters (track-based alignment only)
search_sigma_max = 50.0
# only consider tracks with a chi2 value (track-based alignment only)
reduced_chi2_max = 1000.0

[align.tel_fine1]
# which method should be used to compute the alignment
method = "localchi2" # correlations, residuals
# sensors that are used to compute the alignment, e.g. to build tracks
sensor_ids = [0,1,2,3]
# sensors which should be aligned (must be a subset of sensor_ids)
align_ids = [0,2]
# number of iterative alignment steps
num_steps = 60
# search window to find additional track clusters (track-based alignment only)
search_sigma_max = 1000.0
# only consider tracks with a chi2 value (track-based alignment only)
reduced_chi2_max = 1000.0

[align.tel_fine2]
# which method should be used to compute the alignment
method = "localchi2" # correlations, residuals
# sensors that are used to compute the alignment, e.g. to build tracks
sensor_ids = [0,1,2,3]
# sensors which should be aligned (must be a subset of sensor_ids)
align_ids = [1,3]
# number of iterative alignment steps
num_steps = 60
# search window to find additional track clusters (track-based alignment only)
search_sigma_max = 10000.0
# only consider tracks with a chi2 value (track-based alignment only)
reduced_chi2_max = 1000.0

[align.dut_fine]
# which method should be used to compute the alignment
method = "localchi2" # correlations, residuals
# sensors that are used to compute the alignment, e.g. to build tracks
sensor_ids = [0,1,2,3,4]
# sensors which should be aligned (must be a subset of sensor_ids)
align_ids = [4]
# number of iterative alignment steps
num_steps = 60
# search window to find additional track clusters (track-based alignment only)
search_sigma_max = 1000.0
# only consider tracks with a chi2 value (track-based alignment only)
reduced_chi2_max = 1000.0
